// <auto-generated />
using System;
using CarShowRoom;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShowRoom.Migrations
{
    [DbContext(typeof(CarShowRoomContext))]
    [Migration("20250226112012_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShowRoom.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CarBrandId")
                        .HasColumnType("int");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("CarId");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("CarTypeId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            CarId = 1,
                            Brand = "Toyota",
                            CarBrandId = 1,
                            CarTypeId = 1,
                            Model = "Camry",
                            Price = 30000m,
                            Year = 2021
                        },
                        new
                        {
                            CarId = 2,
                            Brand = "BMW",
                            CarBrandId = 2,
                            CarTypeId = 2,
                            Model = "X5",
                            Price = 60000m,
                            Year = 2022
                        },
                        new
                        {
                            CarId = 3,
                            Brand = "Mercedes",
                            CarBrandId = 3,
                            CarTypeId = 1,
                            Model = "C-Class",
                            Price = 45000m,
                            Year = 2020
                        },
                        new
                        {
                            CarId = 4,
                            Brand = "Toyota",
                            CarBrandId = 1,
                            CarTypeId = 2,
                            Model = "RAV4",
                            Price = 35000m,
                            Year = 2023
                        },
                        new
                        {
                            CarId = 5,
                            Brand = "BMW",
                            CarBrandId = 2,
                            CarTypeId = 1,
                            Model = "3 Series",
                            Price = 40000m,
                            Year = 2019
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarBrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarBrandId");

                    b.ToTable("CarBrands");

                    b.HasData(
                        new
                        {
                            CarBrandId = 1,
                            BrandName = "Toyota"
                        },
                        new
                        {
                            CarBrandId = 2,
                            BrandName = "BMW"
                        },
                        new
                        {
                            CarBrandId = 3,
                            BrandName = "Mercedes"
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.CarType", b =>
                {
                    b.Property<int>("CarTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarTypeId"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CarTypeId");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            CarTypeId = 1,
                            TypeName = "Sedan"
                        },
                        new
                        {
                            CarTypeId = 2,
                            TypeName = "SUV"
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "john.doe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "1234567890"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "jane.smith@yahoo.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            PhoneNumber = "0987654321"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "michael.johnson@outlook.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            PhoneNumber = "1112223333"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "emily.brown@mail.com",
                            FirstName = "Emily",
                            LastName = "Brown",
                            PhoneNumber = "4445556666"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "david.williams@gmail.com",
                            FirstName = "David",
                            LastName = "Williams",
                            PhoneNumber = "7778889999"
                        },
                        new
                        {
                            CustomerId = 6,
                            Email = "sophia.miller@live.com",
                            FirstName = "Sophia",
                            LastName = "Miller",
                            PhoneNumber = "5554443333"
                        },
                        new
                        {
                            CustomerId = 7,
                            Email = "daniel.anderson@gmail.com",
                            FirstName = "Daniel",
                            LastName = "Anderson",
                            PhoneNumber = "2221110000"
                        },
                        new
                        {
                            CustomerId = 8,
                            Email = "olivia.martinez@aol.com",
                            FirstName = "Olivia",
                            LastName = "Martinez",
                            PhoneNumber = "6667778888"
                        },
                        new
                        {
                            CustomerId = 9,
                            Email = "matthew.garcia@gmail.com",
                            FirstName = "Matthew",
                            LastName = "Garcia",
                            PhoneNumber = "9998887777"
                        },
                        new
                        {
                            CustomerId = 10,
                            Email = "emma.lopez@yahoo.com",
                            FirstName = "Emma",
                            LastName = "Lopez",
                            PhoneNumber = "3332221111"
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Robert",
                            LastName = "Taylor",
                            Salary = 5000m
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "Linda",
                            LastName = "Harris",
                            Salary = 5500m
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "William",
                            LastName = "Clark",
                            Salary = 6000m
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.Sale", b =>
                {
                    b.Property<int>("SaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId1")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SalePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SaleId");

                    b.HasIndex("CarId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("CustomerId1");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleId = 1,
                            CarId = 1,
                            CustomerId = 1,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 29000m
                        },
                        new
                        {
                            SaleId = 2,
                            CarId = 2,
                            CustomerId = 2,
                            EmployeeId = 2,
                            SaleDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 58000m
                        },
                        new
                        {
                            SaleId = 3,
                            CarId = 3,
                            CustomerId = 3,
                            EmployeeId = 3,
                            SaleDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 43000m
                        },
                        new
                        {
                            SaleId = 4,
                            CarId = 4,
                            CustomerId = 4,
                            EmployeeId = 1,
                            SaleDate = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 34000m
                        },
                        new
                        {
                            SaleId = 5,
                            CarId = 5,
                            CustomerId = 5,
                            EmployeeId = 2,
                            SaleDate = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalePrice = 39000m
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.ServiceHistory", b =>
                {
                    b.Property<int>("ServiceHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceHistoryId"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ServiceHistoryId");

                    b.HasIndex("CarId");

                    b.ToTable("ServiceHistories");

                    b.HasData(
                        new
                        {
                            ServiceHistoryId = 1,
                            CarId = 1,
                            ServiceDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDescription = "Routine maintenance, oil change"
                        },
                        new
                        {
                            ServiceHistoryId = 2,
                            CarId = 2,
                            ServiceDate = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDescription = "Brake pad replacement"
                        },
                        new
                        {
                            ServiceHistoryId = 3,
                            CarId = 3,
                            ServiceDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDescription = "Engine diagnostics"
                        },
                        new
                        {
                            ServiceHistoryId = 4,
                            CarId = 4,
                            ServiceDate = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDescription = "Wheel balancing"
                        },
                        new
                        {
                            ServiceHistoryId = 5,
                            CarId = 5,
                            ServiceDate = new DateTime(2023, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDescription = "Spark plug replacement"
                        });
                });

            modelBuilder.Entity("CarShowRoom.Models.Car", b =>
                {
                    b.HasOne("CarShowRoom.Models.CarBrand", "CarBrand")
                        .WithMany()
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoom.Models.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoom.Models.Customer", "Customer")
                        .WithMany("Cars")
                        .HasForeignKey("CustomerId");

                    b.Navigation("CarBrand");

                    b.Navigation("CarType");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CarShowRoom.Models.Sale", b =>
                {
                    b.HasOne("CarShowRoom.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarShowRoom.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CarShowRoom.Models.Customer", null)
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId1");

                    b.HasOne("CarShowRoom.Models.Employee", "Employee")
                        .WithMany("Sales")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CarShowRoom.Models.ServiceHistory", b =>
                {
                    b.HasOne("CarShowRoom.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarShowRoom.Models.Customer", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("CarShowRoom.Models.Employee", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
